You are given two strings s and t of the same length. You want to change s to t. Changing the i-th character of s to i-th character of t costs |s[i] - t[i]| that is, 
the absolute difference between the ASCII values of the characters.
You are also given an integer maxCost.
Return the maximum length of a substring of s that can be changed to be the same as the corresponding substring of twith a cost less than or equal to maxCost.
If there is no substring from s that can be changed to its corresponding substring from t, return 0.

Input Description:
Strings s,t and a integers n in a single line as inputs.(1<n<1000).

Output Description:
print the maximum length of a substring of s that can be changed to be the same as the corresponding substring of twith a cost less than or equal to maxCost.

Sample Input:
abcd bcdf 3

Sample Output:
3

Explanation:
"abc" of s can change to "bcd". That costs 3, so the maximum length is 3.

Sample Input:
wert erty 3

Sample Output:
1

Sample Input:
mad sad 2

Sample Output:
2

Sample Input:
sunny rainy 3

Sample Output:
2

Sample Input:
guvi guvi 4

Sample Output:
4

Sample Input:
golden silvermat 3

Sample Output:
1
